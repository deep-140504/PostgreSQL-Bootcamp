----------------------------------------------------------------------------------------------------
-- RIGHT joins
-- IT RETURN ALL THE DATA FROM TABLE2 AND ALL THE MATCHING DATA FROM TABLE 1
-- OPPOSITE OF LEFT JOIN
SELECT
	*
FROM
	LEFT_PRODUCTS
	RIGHT JOIN RIGHT_PRODUCTS USING (PRODUCT_ID);

-- RIGHT JOIN ON MOVIES TABLE
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) DIRECTOR,
	MV.MOVIE_NAME
FROM
	DIRECTORS D
	RIGHT JOIN MOVIES MV ON MV.DIRECTOR_ID = D.DIRECTOR_ID;

-- REVERSE THE TABLE
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) DIRECTOR,
	MV.MOVIE_NAME
FROM
	MOVIES MV
	RIGHT JOIN DIRECTORS D ON MV.DIRECTOR_ID = D.DIRECTOR_ID;

-- GET LIST OF ENGLISH AND CHINESE MOVIES ONLY
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) DIRECTOR,
	MV.MOVIE_NAME
FROM
	MOVIES MV
	RIGHT JOIN DIRECTORS D ON D.DIRECTOR_ID = MV.DIRECTOR_ID
WHERE
	MV.MOVIE_LANGUAGE IN ('English', 'Chinese')
ORDER BY
	1;

----------------------------------------------------------------------------------------------------
-- RIGHT joins Part 2
SELECT
	MV.MOVIE_NAME,
	DR.FIRST_NAME || ' ' || DR.LAST_NAME AS "Director Name"
FROM
	DIRECTORS AS DR
	RIGHT JOIN MOVIES AS MV USING (DIRECTOR_ID)
WHERE
	MV.MOVIE_LANGUAGE IN ('English', 'Chinese');

SELECT
	DR.FIRST_NAME || ' ' || DR.LAST_NAME AS "Director Name",
	COUNT(MV.MOVIE_NAME)
FROM
	DIRECTORS AS DR
	RIGHT JOIN MOVIES AS MV USING (DIRECTOR_ID)
GROUP BY
	DR.DIRECTOR_ID
ORDER BY
	COUNT(*) DESC,
	DR.FIRST_NAME;

SELECT
	DR.FIRST_NAME || ' ' || DR.LAST_NAME AS "Director Name",
	MV.MOVIE_NAME,
	MR.REVENUES_DOMESTIC + MR.REVENUES_INTERNATIONAL AS "Total Revenues"
FROM
	DIRECTORS AS DR
	RIGHT JOIN MOVIES AS MV USING (DIRECTOR_ID)
	RIGHT JOIN MOVIES_REVENUES AS MR USING (MOVIE_ID)
WHERE
	(MR.REVENUES_DOMESTIC + MR.REVENUES_INTERNATIONAL) IS NOT NULL
ORDER BY
	3 DESC;