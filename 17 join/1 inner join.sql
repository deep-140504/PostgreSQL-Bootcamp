----------------------------------------------------------------------------------------------------
-- INNER JOIN
-- BASIC SYNTAX
SELECT
	T1.COLUMN1,
	T2.COLUMN1
FROM
	TABLE1 T1
	INNER JOIN TABLE2 T2 ON T1.COLUMN1 = T2.COLUM2;

SELECT
	MV.MOVIE_NAME,
	MV.RELEASE_DATE,
	MV.MOVIE_LANGUAGE,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) AS DIRECTOR
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR ON DR.DIRECTOR_ID = MV.DIRECTOR_ID;

SELECT
	MV.MOVIE_NAME,
	MV.RELEASE_DATE,
	MV.MOVIE_LANGUAGE,
	DR.DIRECTOR_ID,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) AS DIRECTOR
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR ON DR.DIRECTOR_ID = MV.DIRECTOR_ID
WHERE
	MV.MOVIE_LANGUAGE = 'English'
	AND DR.DIRECTOR_ID = 2;

----------------------------------------------------------------------------------------------------
-- INNER joins with USING
-- BASIC SYNTAX
SELECT
	T1.COLUMN1,
	T2.COLUMN1
FROM
	TABLE1 T1
	INNER JOIN TABLE2 T2 USING (COLUMN1);

SELECT
	MV.MOVIE_NAME,
	MV.MOVIE_LANGUAGE
FROM
	MOVIES MV
	INNER JOIN DIRECTORS D USING (DIRECTOR_ID);

-- THIS PRODUCE SAME RESULT AS WHEN USED WITH ON CLAUSE
SELECT
	MV.MOVIE_NAME,
	COALESCE(R.REVENUES_DOMESTIC, 0) "Domestic Revnue",
	COALESCE(R.REVENUES_INTERNATIONAL, 0) "International revenue",
	COALESCE(R.REVENUES_DOMESTIC, 0) + COALESCE(R.REVENUES_INTERNATIONAL, 0) "Net Revenue"
FROM
	MOVIES MV
	-- INNER JOIN MOVIES_REVENUES R ON R.MOVIE_ID = MV.MOVIE_ID; -- BELOW AND THIS LINE PRODUCES THE SAME RESULT
	INNER JOIN MOVIES_REVENUES R USING (MOVIE_ID)
ORDER BY
	4 DESC;

-- JOINING MULTIPLE TABLES
-- SEE THERES NO COMMA AFTER EACH JOIN
SELECT
	*
FROM
	MOVIES
	INNER JOIN DIRECTORS USING (DIRECTOR_ID)
	INNER JOIN MOVIES_REVENUES USING (MOVIE_ID);

----------------------------------------------------------------------------------------------------
-- INNER joins with filter data Part 1
SELECT
	MV.MOVIE_NAME,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) DIRECTOR,
	COALESCE(R.REVENUES_DOMESTIC, 0) DOMESTIC_REVENUE
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR USING (DIRECTOR_ID)
	INNER JOIN MOVIES_REVENUES R USING (MOVIE_ID)
WHERE
	MV.MOVIE_LANGUAGE = 'Japanese'
ORDER BY
	3 DESC;

SELECT
	MV.MOVIE_NAME,
	MV.MOVIE_LANGUAGE,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) DIRECTOR,
	COALESCE(R.REVENUES_DOMESTIC, 0) DOMESTIC_REVENUE
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR USING (DIRECTOR_ID)
	INNER JOIN MOVIES_REVENUES R USING (MOVIE_ID)
WHERE
	MV.MOVIE_LANGUAGE IN ('Japanese', 'English', 'Chinese')
	AND R.REVENUES_DOMESTIC > 100
ORDER BY
	4 DESC;

----------------------------------------------------------------------------------------------------
-- INNER joins with filter data Part 2
SELECT
	MV.MOVIE_NAME,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) "Director",
	MV.MOVIE_LANGUAGE,
	COALESCE(R.REVENUES_DOMESTIC, 0) + COALESCE(R.REVENUES_INTERNATIONAL, 0) "Total revenue"
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR USING (DIRECTOR_ID);

INNER JOIN MOVIES_REVENUES R USING (MOVIE_ID)
ORDER BY
	4 DESC
LIMIT
	5;

----------------------------------------------------------------------------------------------------
-- INNER joins with filter data Part 3
SELECT
	MV.MOVIE_NAME,
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) "director",
	MV.MOVIE_LANGUAGE,
	MV.RELEASE_DATE,
	COALESCE(R.REVENUES_DOMESTIC, 0) + COALESCE(R.REVENUES_INTERNATIONAL, 0) "net revenue"
FROM
	MOVIES MV
	INNER JOIN DIRECTORS DR USING (DIRECTOR_ID)
	INNER JOIN MOVIES_REVENUES R USING (MOVIE_ID)
WHERE
	MV.RELEASE_DATE BETWEEN '2005-01-01' AND '2008-12-31'
ORDER BY
	5 DESC
LIMIT
	10;

----------------------------------------------------------------------------------------------------
-- INNER joins with different data type columns'
CREATE TABLE T1 (TEST INT);

CREATE TABLE T2 (TEST VARCHAR(10));

SELECT
	*
FROM
	T1
	INNER JOIN T2 ON T1.TEST = T2.TEST;

-- THIS GIVES AN ERROR, SO THE JOINING ON DIFFERENT DATA TYPE CAN BE CARRIED OUT BY TYPE CASTING
SELECT
	*
FROM
	T1
	-- INNER JOIN T2 ON T1.TEST = CAST(T2.TEST AS INT);, BELOW PRODUCES SAME RESULTS
	INNER JOIN T2 ON CAST(T1.TEST AS VARCHAR) = T2.TEST;

INSERT INTO
	T1 (TEST)
VALUES
	(1),
	(2);

INSERT INTO
	T2 (TEST)
VALUES
	('B'),
	('A');

SELECT
	*
FROM
	T2;