----------------------------------------------------------------------------------------------------
-- LEFT joins Part 1
-- LEFT JOIN JOINS ALL THE DATA FROM THE LEFT TABLE WITH RIGHT TABLE, BASED ON THE COLUMN SPECIFIED
-- FOR LEFT JOIN ALL THE DATA FROM FIRST TABLE WILL RETURN
CREATE TABLE LEFT_PRODUCTS (
	PRODUCT_ID SERIAL PRIMARY KEY,
	PRODUCT_NAME VARCHAR(100)
);

CREATE TABLE RIGHT_PRODUCTS (
	PRODUCT_ID SERIAL PRIMARY KEY,
	PRODUCT_NAME VARCHAR(100)
);

INSERT INTO
	LEFT_PRODUCTS (PRODUCT_ID, PRODUCT_NAME)
VALUES
	(1, 'A'),
	(2, 'B'),
	(3, 'C'),
	(4, 'D');

INSERT INTO
	LEFT_PRODUCTS (PRODUCT_ID, PRODUCT_NAME)
VALUES
	(6, 'P');

INSERT INTO
	RIGHT_PRODUCTS (PRODUCT_ID, PRODUCT_NAME)
VALUES
	(1, 'E'),
	(2, 'F'),
	(3, 'G'),
	(4, 'H'),
	(5, 'I');

SELECT
	*
FROM
	LEFT_PRODUCTS;

SELECT
	*
FROM
	RIGHT_PRODUCTS;

SELECT
	*
FROM
	LEFT_PRODUCTS
	LEFT JOIN RIGHT_PRODUCTS USING (PRODUCT_ID);

----------------------------------------------------------------------------------------------------
-- LEFT joins Part 2
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) "Director",
	MV.MOVIE_NAME
FROM
	DIRECTORS D
	-- LEFT JOIN MOVIES MV USING(DIRECTOR_ID);
	LEFT JOIN MOVIES MV ON MV.DIRECTOR_ID = D.DIRECTOR_ID;

SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) "Director",
	MV.MOVIE_NAME
FROM
	MOVIES MV
	-- LEFT JOIN DIRECTORS D USING(DIRECTOR_ID);
	LEFT JOIN DIRECTORS D ON D.DIRECTOR_ID = MV.DIRECTOR_ID;

INSERT INTO
	DIRECTORS (FIRST_NAME, LAST_NAME, DATE_OF_BIRTH, NATIONALITY)
VALUES
	('A', 'B', '01-01-2004', 'INDIAN');

SELECT
	*
FROM
	DIRECTORS;

----------------------------------------------------------------------------------------------------
-- LEFT joins Part 3
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME),
	MV.MOVIE_NAME,
	MV.MOVIE_LANGUAGE
FROM
	MOVIES MV
	LEFT JOIN DIRECTORS D ON MV.DIRECTOR_ID = D.DIRECTOR_ID
WHERE
	MV.MOVIE_LANGUAGE IN ('English', 'Chinese')
ORDER BY
	3;

SELECT
	CONCAT(DR.FIRST_NAME, '', DR.LAST_NAME),
	COUNT(*) "Total Movies"
FROM
	DIRECTORS DR
	LEFT JOIN MOVIES MV ON MV.DIRECTOR_ID = DR.DIRECTOR_ID
GROUP BY
	DR.FIRST_NAME,
	DR.LAST_NAME
ORDER BY
	2;

-- GET COUNT OF MOVIES MADE BY DIRECTOR
SELECT
	CONCAT(DR.FIRST_NAME, ' ', DR.LAST_NAME) AS "Director",
	COUNT(MV.MOVIE_ID) AS "Total Movies"
FROM
	DIRECTORS DR
	LEFT JOIN MOVIES MV ON MV.DIRECTOR_ID = DR.DIRECTOR_ID
GROUP BY
	DR.FIRST_NAME,
	DR.LAST_NAME
ORDER BY
	2;

-- GET ALL THE MOVIES WITH AGE CERTIFICATION FOR ALL DIRECTORS WHERE NATIONALITIES ARE 'AM', 'CH', 'JP'
-- HERE GETTING MOVIES FOR ALL DIRECTORS SO, FIRST TABLE: DIRECTORS
SELECT
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME),
	COALESCE(MV.MOVIE_NAME, ''),
	COALESCE(MV.AGE_CERTIFICATE, '')
FROM
	DIRECTORS D
	LEFT JOIN MOVIES MV USING (DIRECTOR_ID)
WHERE
	D.NATIONALITY IN ('American', 'Chinese', 'Japanese')
ORDER BY
	3;

----------------------------------------------------------------------------------------------------
-- LEFT joins Part 4
-- GET ALL THE TOTAL REVENUE DONE BY EACH FILMS FOR EACH DIRECTORS
-- FIRST TABLE: FILMS
SELECT
	MV.MOVIE_NAME MOVIE,
	CONCAT(D.FIRST_NAME, ' ', D.LAST_NAME) DIRECTOR,
	SUM(R.REVENUES_DOMESTIC+ R.REVENUES_INTERNATIONAL) NET_REVENUE
FROM
	MOVIES MV
	LEFT JOIN DIRECTORS D ON D.DIRECTOR_ID = MV.DIRECTOR_ID
	INNER JOIN MOVIES_REVENUES R ON R.MOVIE_ID = MV.MOVIE_ID
GROUP BY
	MV.MOVIE_NAME,
	D.FIRST_NAME,
	D.LAST_NAME
HAVING
	(
		SUM(R.REVENUES_DOMESTIC+ R.REVENUES_INTERNATIONAL) > 0
	)
ORDER BY
	3