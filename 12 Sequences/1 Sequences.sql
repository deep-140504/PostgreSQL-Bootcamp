-- CREATE A SEQUENCE
CREATE SEQUENCE IF NOT EXISTS TEST_SEQ;

-- ADVANCE SEQUENCE AND RETURN A NEW VALUE
SELECT
	NEXTVAL('TEST_SEQ');

-- CURRENT VALUE OF A SEQUENCE
SELECT
	CURRVAL('TEST_SEQ');

-- SET VALUE OF A SEQUENCE
-- WITH SKIPPING OVER
SELECT
	SETVAL('TEST_SEQ', 100);

SELECT
	NEXTVAL('TEST_SEQ');

-- WITHOUT SKIPPING OVER
SELECT
	SETVAL('TEST_SEQ', 200, FALSE);

SELECT
	NEXTVAL('TEST_SEQ');

SELECT
	NEXTVAL('TEST_SEQ');

-- WITH START VALUE
CREATE SEQUENCE IF NOT EXISTS TEST_SEQ2 START
WITH
	100;

SELECT
	NEXTVAL('TEST_SEQ2');

----------------------------------------------------------------------------------------------------
-- ALTER AND RESTART
ALTER SEQUENCE TEST_SEQ RESTART
WITH
	100;

SELECT
	NEXTVAL('TEST_SEQ2');

ALTER SEQUENCE TEST_SEQ
RENAME TO SEQ;

SELECT
	NEXTVAL('SEQ');

----------------------------------------------------------------------------------------------------
-- INCREMENT, MIN, MAX
CREATE SEQUENCE IF NOT EXISTS TEST_SEQ1 INCREMENT 50 MINVALUE 400 MAXVALUE 6000 START
WITH
	500;

ALTER SEQUENCE TEST_SEQ1 MAXVALUE 1500;

SELECT
	NEXTVAL('TEST_SEQ1');

----------------------------------------------------------------------------------------------------
-- SEQUENCE WITH A SPECIFIC DATA TYPE
CREATE SEQUENCE IF NOT EXISTS TEST_SEQ_SMALLINT AS SMALLINT;

CREATE SEQUENCE IF NOT EXISTS TEST_SEQ_INT AS SMALLINT;

CREATE SEQUENCE IF NOT EXISTS TEST_SEQQ;

----------------------------------------------------------------------------------------------------
-- CREATING A DESCENDING SEQUENCE, AND CYCLE SEQUENCE
CREATE SEQUENCE IF NOT EXISTS SEQ_ASC;

SELECT
	NEXTVAL('SEQ_ASC');

CREATE SEQUENCE IF NOT EXISTS SEQ_DES INCREMENT -1 MINVALUE 1 MAXVALUE 3 START 3 CYCLE;

SELECT
	NEXTVAL('SEQ_DES');

-- DELETING A SEQUENCE
DROP SEQUENCE SEQ_ASC;

----------------------------------------------------------------------------------------------------
-- Attach a sequence to a table column
CREATE TABLE USERS (USER_ID SERIAL PRIMARY KEY, USER_NAME VARCHAR(50));

INSERT INTO
	USERS (USER_NAME)
VALUES
	('DABHI1');

SELECT
	*
FROM
	USERS;

-- ALTERING THE SEQUENCE OF SERIAL USER_ID, WHICH IS PRIMARY KEY
ALTER SEQUENCE USERS_USER_ID_SEQ RESTART
WITH
	100;

CREATE TABLE USERS2 (USER2_ID INT PRIMARY KEY, USER2_NAME VARCHAR(50));

-- LINKING OF SEQUENCE TO THE USER2_ID
-- THIS LIKE CHANGING THE TYPE OF INT TO SERIAL
CREATE SEQUENCE USERS2_USERS2_ID_SEQ START
WITH
	100 OWNED BY USERS2.USER2_ID;

ALTER TABLE USERS2
ALTER COLUMN USER2_ID
SET DEFAULT NEXTVAL('USERS2_USERS2_ID_SEQ');

INSERT INTO
	USERS2 (USER2_NAME)
VALUES
	('ABCD');

SELECT
	*
FROM
	USERS2;

----------------------------------------------------------------------------------------------------
-- List all sequences in a database
SELECT
	RELNAME SEQUENCE_NAME
FROM
	PG_CLASS
WHERE
	RELKIND = 'S';

----------------------------------------------------------------------------------------------------
-- SHARE SEQUENCE AMONG MULTIPLE TABLES
CREATE SEQUENCE COMMON_FRUITS_SEQ START
WITH
	100;

CREATE TABLE APPLES (
	FRUIT_ID INT DEFAULT NEXTVAL('COMMON_FRUITS_SEQ') NOT NULL,
	FRUIT_NAME VARCHAR(50)
);

CREATE TABLE MANGOES (
	FRUIT_ID INT DEFAULT NEXTVAL('COMMON_FRUITS_SEQ') NOT NULL,
	FRUIT_NAME VARCHAR(50)
);

INSERT INTO
	APPLES (FRUIT_NAME)
VALUES
	('BIG APPLE');

SELECT
	*
FROM
	APPLES;

INSERT INTO
	MANGOES (FRUIT_NAME)
VALUES
	('BIG MANGO');

SELECT
	*
FROM
	MANGOES;

----------------------------------------------------------------------------------------------------
-- Create an alphanumeric sequence
CREATE TABLE CONTACTS (
	CONTACT_ID SERIAL PRIMARY KEY,
	CONTACT_NAME VARCHAR(150)
);

DROP TABLE CONTACTS;

CREATE SEQUENCE TABLE_SEQ;

CREATE TABLE CONTACTS (
	CONTACT_ID TEXT NOT NULL DEFAULT ('ID' || NEXTVAL('TABLE_SEQ')),
	CONTACT_NAME VARCHAR(150)
)
ALTER SEQUENCE TABLE_SEQ OWNED BY CONTACTS.CONTACT_ID;

INSERT INTO
	CONTACTS (CONTACT_NAME)
VALUES
	('DEEP');

SELECT
	*
FROM
	CONTACTS;